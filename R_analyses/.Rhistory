levels = paste0(sort(unique(ntaxa)), " taxa")
),
error_diff = unrooted_hwcd - input_error,
min_greedy_error_diff = unrooted_min_greedy_hwcd - input_error,
scaled_hwcd = unrooted_hwcd / ntaxa,
scaled_input_error = input_error / ntaxa,
scaled_error_diff = scaled_hwcd - scaled_input_error,
min_greedy_approx_norm_hwcd = if_else(min_greedy_approx_norm_hwcd < unrooted_hwcd,
min_greedy_approx_norm_hwcd, unrooted_hwcd)
)
nrow(df)
sum(df$snaq_runtime_sum)
sum(df$snaq_runtime_sum) / 60 / 60 / 24
sum(df$snaq_runtime_sum) / 60 / 60 / 24 / 365 / 100
sum(df$snaq_runtime_sum) / 60 / 60 / 24 / 100
sum(df$snaq_runtime_sum) / 60 / 60 / 24 / 10
library(ggplot2)
library(tidyverse)
library(patchwork)
library(cowplot)
library(tidymodels)  # coord_obs_pred()
library(reshape2)
library(scales)
theme_set(theme_bw())
base_dir <- "../"
estgt_dir <- paste0(base_dir, "est-gts/")
df <- read.csv(paste0(estgt_dir, "analysis/approx_normalized_errors.csv")) %>%
#df <- read.csv(paste0(estgt_dir, "data/out.csv")) %>%
filter(ntaxa == 30) %>%
mutate(
retic_diff = as.factor(nretic_true - nretic_est),
input_error = min_unrooted_nj_hwcd + sum_constraint_hwcd,
ngt_label = paste0(ngt, " gene trees"),
ils_label = factor(
paste0(str_to_title(ils), " ILS"),
levels = c("Low ILS", "Med ILS", "High ILS", "Very High ILS")
),
m_label = paste0("m = ", m),
ils_m_label = paste0("m = ", m, " ", ils_label),
ntaxa_label = factor(
paste0(ntaxa, " taxa"),
levels = paste0(sort(unique(ntaxa)), " taxa")
),
error_diff = unrooted_hwcd - input_error,
min_greedy_error_diff = unrooted_min_greedy_hwcd - input_error,
scaled_hwcd = unrooted_hwcd / ntaxa,
scaled_input_error = input_error / ntaxa,
scaled_error_diff = scaled_hwcd - scaled_input_error,
min_greedy_approx_norm_hwcd = if_else(min_greedy_approx_norm_hwcd < unrooted_hwcd,
min_greedy_approx_norm_hwcd, unrooted_hwcd)
)
nrow(df)
ggplot(df, aes(x = factor(m), y = unrooted_hwcd)) +
geom_boxplot() +
geom_jitter(width = 0.35, height = 0)
idx <- which(df$min_greedy_approx_norm_hwcd > 0.2)
df$rep[idx]
df$m[idx]
idx <- which(df$min_greedy_approx_norm_hwcd > 0.4)
df$rep[idx]
df$m[idx]
df$rep[idx]
df$m[idx]
ggplot(df, aes(x = rep, y = min_greedy_approx_norm_hwcd, color = factor(m))) +
geom_jitter(width = 0.1, height = 0.0)
idx <- which(df$min_greedy_approx_norm_hwcd > 0.34)
df$rep[idx]
df$m[idx]
idx <- which(df$min_greedy_approx_norm_hwcd > 0.2)
df$rep[idx]
df$m[idx]
library(ggplot2)
library(tidyverse)
library(patchwork)
library(cowplot)
library(tidymodels)  # coord_obs_pred()
library(reshape2)
library(scales)
theme_set(theme_bw())
base_dir <- "../"
estgt_dir <- paste0(base_dir, "est-gts/")
df <- read.csv(paste0(estgt_dir, "analysis/approx_normalized_errors.csv")) %>%
#df <- read.csv(paste0(estgt_dir, "data/out.csv")) %>%
filter(ntaxa == 30) %>%
mutate(
retic_diff = as.factor(nretic_true - nretic_est),
input_error = min_unrooted_nj_hwcd + sum_constraint_hwcd,
ngt_label = paste0(ngt, " gene trees"),
ils_label = factor(
paste0(str_to_title(ils), " ILS"),
levels = c("Low ILS", "Med ILS", "High ILS", "Very High ILS")
),
m_label = paste0("m = ", m),
ils_m_label = paste0("m = ", m, " ", ils_label),
ntaxa_label = factor(
paste0(ntaxa, " taxa"),
levels = paste0(sort(unique(ntaxa)), " taxa")
),
error_diff = unrooted_hwcd - input_error,
min_greedy_error_diff = unrooted_min_greedy_hwcd - input_error,
scaled_hwcd = unrooted_hwcd / ntaxa,
scaled_input_error = input_error / ntaxa,
scaled_error_diff = scaled_hwcd - scaled_input_error,
min_greedy_approx_norm_hwcd = if_else(min_greedy_approx_norm_hwcd < unrooted_hwcd,
min_greedy_approx_norm_hwcd, unrooted_hwcd)
)
nrow(df)
ggplot(df, aes(x = factor(m), y = unrooted_hwcd)) +
geom_boxplot() +
geom_jitter(width = 0.35, height = 0)
ggplot(df, aes(x = rep, y = min_greedy_approx_norm_hwcd, color = factor(m))) +
geom_jitter(width = 0.1, height = 0.0)
library(ggplot2)
library(tidyverse)
library(patchwork)
library(cowplot)
library(tidymodels)  # coord_obs_pred()
library(reshape2)
library(scales)
theme_set(theme_bw())
base_dir <- "../"
estgt_dir <- paste0(base_dir, "est-gts/")
df <- read.csv(paste0(estgt_dir, "analysis/approx_normalized_errors.csv")) %>%
#df <- read.csv(paste0(estgt_dir, "data/out.csv")) %>%
filter(ntaxa == 30) %>%
mutate(
retic_diff = as.factor(nretic_true - nretic_est),
input_error = min_unrooted_nj_hwcd + sum_constraint_hwcd,
ngt_label = paste0(ngt, " gene trees"),
ils_label = factor(
paste0(str_to_title(ils), " ILS"),
levels = c("Low ILS", "Med ILS", "High ILS", "Very High ILS")
),
m_label = paste0("m = ", m),
ils_m_label = paste0("m = ", m, " ", ils_label),
ntaxa_label = factor(
paste0(ntaxa, " taxa"),
levels = paste0(sort(unique(ntaxa)), " taxa")
),
error_diff = unrooted_hwcd - input_error,
min_greedy_error_diff = unrooted_min_greedy_hwcd - input_error,
scaled_hwcd = unrooted_hwcd / ntaxa,
scaled_input_error = input_error / ntaxa,
scaled_error_diff = scaled_hwcd - scaled_input_error,
min_greedy_approx_norm_hwcd = if_else(min_greedy_approx_norm_hwcd < unrooted_hwcd,
min_greedy_approx_norm_hwcd, unrooted_hwcd)
)
nrow(df)
ggplot(df, aes(x = factor(m), y = unrooted_hwcd)) +
geom_boxplot() +
geom_jitter(width = 0.35, height = 0)
library(ggplot2)
library(tidyverse)
library(patchwork)
library(cowplot)
library(tidymodels)  # coord_obs_pred()
library(reshape2)
library(scales)
theme_set(theme_bw())
base_dir <- "../"
estgt_dir <- paste0(base_dir, "est-gts/")
df <- read.csv(paste0(estgt_dir, "analysis/approx_normalized_errors.csv")) %>%
#df <- read.csv(paste0(estgt_dir, "data/out.csv")) %>%
filter(ntaxa == 30) %>%
mutate(
retic_diff = as.factor(nretic_true - nretic_est),
input_error = min_unrooted_nj_hwcd + sum_constraint_hwcd,
ngt_label = paste0(ngt, " gene trees"),
ils_label = factor(
paste0(str_to_title(ils), " ILS"),
levels = c("Low ILS", "Med ILS", "High ILS", "Very High ILS")
),
m_label = paste0("m = ", m),
ils_m_label = paste0("m = ", m, " ", ils_label),
ntaxa_label = factor(
paste0(ntaxa, " taxa"),
levels = paste0(sort(unique(ntaxa)), " taxa")
),
error_diff = unrooted_hwcd - input_error,
min_greedy_error_diff = unrooted_min_greedy_hwcd - input_error,
scaled_hwcd = unrooted_hwcd / ntaxa,
scaled_input_error = input_error / ntaxa,
scaled_error_diff = scaled_hwcd - scaled_input_error,
min_greedy_approx_norm_hwcd = if_else(min_greedy_approx_norm_hwcd < unrooted_hwcd,
min_greedy_approx_norm_hwcd, unrooted_hwcd)
)
nrow(df)
ggplot(df, aes(x = factor(m), y = unrooted_hwcd)) +
geom_boxplot() +
geom_jitter(width = 0.35, height = 0)
ggplot(df, aes(x = rep, y = min_greedy_approx_norm_hwcd, color = factor(m))) +
geom_jitter(width = 0.1, height = 0.0)
library(ggplot2)
library(tidyverse)
library(patchwork)
library(cowplot)
library(tidymodels)  # coord_obs_pred()
library(reshape2)
library(scales)
theme_set(theme_bw())
base_dir <- "../"
estgt_dir <- paste0(base_dir, "est-gts/")
df <- read.csv(paste0(estgt_dir, "analysis/approx_normalized_errors.csv")) %>%
#df <- read.csv(paste0(estgt_dir, "data/out.csv")) %>%
filter(ntaxa == 30) %>%
mutate(
retic_diff = as.factor(nretic_true - nretic_est),
input_error = min_unrooted_nj_hwcd + sum_constraint_hwcd,
ngt_label = paste0(ngt, " gene trees"),
ils_label = factor(
paste0(str_to_title(ils), " ILS"),
levels = c("Low ILS", "Med ILS", "High ILS", "Very High ILS")
),
m_label = paste0("m = ", m),
ils_m_label = paste0("m = ", m, " ", ils_label),
ntaxa_label = factor(
paste0(ntaxa, " taxa"),
levels = paste0(sort(unique(ntaxa)), " taxa")
),
error_diff = unrooted_hwcd - input_error,
min_greedy_error_diff = unrooted_min_greedy_hwcd - input_error,
scaled_hwcd = unrooted_hwcd / ntaxa,
scaled_input_error = input_error / ntaxa,
scaled_error_diff = scaled_hwcd - scaled_input_error,
min_greedy_approx_norm_hwcd = if_else(min_greedy_approx_norm_hwcd < unrooted_hwcd,
min_greedy_approx_norm_hwcd, unrooted_hwcd)
)
nrow(df)
ggplot(df, aes(x = factor(m), y = unrooted_hwcd)) +
geom_boxplot() +
geom_jitter(width = 0.35, height = 0)
mean(df$approx_norm_hwcd[df$m == 20])
mean(df$approx_norm_hwcd[df$m == 100])
ggplot(df, aes(x = rep, y = min_greedy_approx_norm_hwcd, color = factor(m))) +
geom_jitter(width = 0.1, height = 0.0)
df %>%
select(ntaxa, rep, ils, ngt, snaq_runtime_sum, snaq_runtime_serial, m) %>%
melt(id = c("ntaxa", "rep", "ils", "ngt", "m")) %>%
mutate(
value = as.numeric(value) / 60 / 60,
variable = factor(variable, levels = c("snaq_runtime_serial", "snaq_runtime_sum"))
) %>%
ggplot(aes(x = factor(m), y = value, fill = variable)) +
geom_boxplot() +
labs(y = "Runtime (hours)")
library(ggplot2)
library(tidyverse)
library(patchwork)
library(cowplot)
library(tidymodels)  # coord_obs_pred()
library(reshape2)
library(scales)
theme_set(theme_bw())
base_dir <- "../"
estgt_dir <- paste0(base_dir, "est-gts/")
df <- read.csv(paste0(estgt_dir, "analysis/approx_normalized_errors.csv")) %>%
#df <- read.csv(paste0(estgt_dir, "data/out.csv")) %>%
filter(ntaxa != 30) %>%
mutate(
retic_diff = as.factor(nretic_true - nretic_est),
input_error = min_unrooted_nj_hwcd + sum_constraint_hwcd,
ngt_label = paste0(ngt, " gene trees"),
ils_label = factor(
paste0(str_to_title(ils), " ILS"),
levels = c("Low ILS", "Med ILS", "High ILS", "Very High ILS")
),
m_label = paste0("m = ", m),
ils_m_label = paste0("m = ", m, " ", ils_label),
ntaxa_label = factor(
paste0(ntaxa, " taxa"),
levels = paste0(sort(unique(ntaxa)), " taxa")
),
error_diff = unrooted_hwcd - input_error,
min_greedy_error_diff = unrooted_min_greedy_hwcd - input_error,
scaled_hwcd = unrooted_hwcd / ntaxa,
scaled_input_error = input_error / ntaxa,
scaled_error_diff = scaled_hwcd - scaled_input_error,
min_greedy_approx_norm_hwcd = if_else(min_greedy_approx_norm_hwcd < unrooted_hwcd,
min_greedy_approx_norm_hwcd, unrooted_hwcd)
)
nrow(df)
pdf("fig/hwcd-vs-nretic.pdf", width = 8, height = 4)
df %>%
filter(m == 20) %>%
#group_by(ntaxa_label, m_label, ngt_label, ils_label, nretic_true) %>%
#mutate(
#  avg_hwcd = mean(min_greedy_approx_norm_hwcd),
#  low_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.05),
#  high_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.95)
#) %>%
ggplot(aes(y = min_greedy_approx_norm_hwcd, x = nretic_true, color = ngt_label)) +
geom_jitter(width = 0.25, alpha = 0.15) +
geom_smooth(method = NULL, se = FALSE, span = 0.75) +
facet_grid(ils_label ~ ntaxa_label, scales = "free") +
labs(
x = "Number of Reticulations", y = "Output Error"
) +
scale_color_manual("", values = c('#1b9e77', '#d95f02', '#7570b3', "#e7298a"))
dev.off()
df %>%
filter(m == 20) %>%
#group_by(ntaxa_label, m_label, ngt_label, ils_label, nretic_true) %>%
#mutate(
#  avg_hwcd = mean(min_greedy_approx_norm_hwcd),
#  low_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.05),
#  high_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.95)
#) %>%
ggplot(aes(y = min_greedy_approx_norm_hwcd, x = nretic_true, color = ngt_label)) +
geom_jitter(width = 0.25, alpha = 0.15) +
geom_smooth(method = NULL, se = FALSE, span = 0.75) +
facet_grid(ils_label ~ ntaxa_label, scales = "free") +
labs(
x = "Number of Reticulations", y = "Output Error"
) +
scale_color_manual("", values = c('#1b9e77', '#d95f02', '#7570b3', "#e7298a"))
df %>%
filter(m == 20 & ntaxa <= 200) %>%
ggplot(aes(y = min_greedy_approx_norm_hwcd, x = nretic_true, color = ngt_label)) +
geom_jitter(width = 0.25, alpha = 0.15) +
geom_smooth(method = NULL, se = FALSE, span = 0.75) +
facet_grid(ils_label ~ ntaxa_label, scales = "free") +
labs(
x = "Number of Reticulations", y = "Output Error"
) +
scale_color_manual("", values = c('#1b9e77', '#d95f02', '#7570b3', "#e7298a"))
df %>%
filter(m == 20 & ntaxa <= 200) %>%
group_by(ntaxa_label, m_label, ngt_label, ils_label, nretic_true) %>%
mutate(
avg_hwcd = mean(min_greedy_approx_norm_hwcd),
low_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.05),
high_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.95)
) %>%
ggplot(aes(x = nretic_true, y = min_greedy_approx_norm_hwcd, color = ngt_label)) +
geom_point()
df %>%
filter(m == 20 & ntaxa <= 200) %>%
group_by(ntaxa_label, m_label, ngt_label, ils_label, nretic_true) %>%
summarise(
avg_hwcd = mean(min_greedy_approx_norm_hwcd),
low_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.05),
high_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.95)
) %>%
ggplot(aes(x = nretic_true, y = min_greedy_approx_norm_hwcd, color = ngt_label)) +
geom_point() +
facet_grid(ils_label ~ ntaxa_label, scales = "free")
df %>%
filter(m == 20 & ntaxa <= 200) %>%
group_by(ntaxa_label, m_label, ngt_label, ils_label, nretic_true) %>%
summarise(
avg_hwcd = mean(min_greedy_approx_norm_hwcd),
low_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.05),
high_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.95)
) %>%
ggplot(aes(x = nretic_true, y = avg_hwcd, color = ngt_label)) +
geom_point() +
facet_grid(ils_label ~ ntaxa_label, scales = "free")
df %>%
filter(m == 20 & ntaxa <= 200) %>%
group_by(ntaxa_label, m_label, ngt_label, ils_label, nretic_true) %>%
summarise(
avg_hwcd = mean(min_greedy_approx_norm_hwcd),
low_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.05),
high_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.95)
) %>%
ggplot(aes(x = nretic_true, y = avg_hwcd, color = ngt_label)) +
geom_point() +
facet_grid(ils_label ~ ntaxa_label, scales = "free") +
scale_color_manual("", values = c('#1b9e77', '#d95f02', '#7570b3', "#e7298a"))
df %>%
filter(m == 20 & ntaxa <= 200) %>%
group_by(ntaxa_label, m_label, ngt_label, ils_label, nretic_true) %>%
summarise(
avg_hwcd = mean(min_greedy_approx_norm_hwcd),
low_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.05),
high_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.95)
) %>%
ggplot(aes(x = nretic_true, y = avg_hwcd, color = ngt_label)) +
geom_point(alpha = 0.25) +
geom_line() +
facet_grid(ils_label ~ ntaxa_label, scales = "free") +
scale_color_manual("", values = c('#1b9e77', '#d95f02', '#7570b3', "#e7298a"))
df %>%
filter(m == 20 & ntaxa <= 200) %>%
group_by(ntaxa_label, m_label, ngt_label, ils_label, nretic_true) %>%
summarise(
avg_hwcd = mean(min_greedy_approx_norm_hwcd),
low_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.05),
high_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.95)
) %>%
ggplot(aes(x = nretic_true, y = avg_hwcd, color = ngt_label)) +
geom_point(alpha = 0.25) +
geom_line() +
facet_grid(ils_label ~ ntaxa_label, scales = "free") +
scale_color_manual("", values = c('#1b9e77', '#d95f02', '#7570b3', "#e7298a")) +
labs(x = "Number of Reticulations", y = "Average Normalized Output Error")
p <- df %>%
filter(m == 20 & ntaxa <= 200) %>%
group_by(ntaxa_label, m_label, ngt_label, ils_label, nretic_true) %>%
summarise(
avg_hwcd = mean(min_greedy_approx_norm_hwcd),
low_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.05),
high_hwcd = quantile(min_greedy_approx_norm_hwcd, 0.95)
) %>%
ggplot(aes(x = nretic_true, y = avg_hwcd, color = ngt_label)) +
geom_point(alpha = 0.25) +
geom_line() +
facet_grid(ils_label ~ ntaxa_label, scales = "free") +
scale_color_manual("", values = c('#1b9e77', '#d95f02', '#7570b3', "#e7298a")) +
labs(x = "Number of Reticulations", y = "Average Normalized Output Error")
p
pdf("fig/hwcd-vs-nretic.pdf", width = 8, height = 4)
p
dev.off()
getwd()
p2 <- rt_df %>%
filter(ntaxa == 30) %>%
filter(ncores %in% c(1, 2, 4)) %>%
mutate(
method = if_else(m == 10, "InPhyNet m=10", if_else(m == 20, "InPhyNet m=20", "SNaQ"))
) %>%
ggplot(aes(x = method, y = runtime, color = factor(ncores))) +
geom_boxplot() +
labs(x = "Method") +
scale_color_manual("CPU Cores", values = c('#1b9e77', '#d95f02', '#7570b3', "#e7298a")) +
labs(y = "Runtime (hours)") +
ggtitle("B")
p2
library(ggplot2)
library(tidyverse)
library(patchwork)
library(cowplot)
library(tidymodels)  # coord_obs_pred()
library(reshape2)
library(scales)
theme_set(theme_bw())
rt_df <- read.csv("../est-gts/analysis/runtime.csv") %>%
mutate(
runtime = runtime / 60 / 60,
m_label = paste0("m = ", m),
ngt_label = paste0(ngt, " gt"),
ils_label = factor(
paste0(str_to_title(ils), " ILS"),
levels = c("Low ILS", "Med ILS", "High ILS", "Very High ILS")
),
ntaxa_label = factor(
paste0(ntaxa, " taxa"),
levels = paste0(sort(unique(ntaxa)), " taxa")
),
)
snaq_df <- read.csv(paste0(estgt_dir, "analysis/approx_normalized_errors.csv")) %>%
filter(ntaxa == 30) %>%
mutate(
retic_diff = as.factor(nretic_true - nretic_est),
input_error = min_unrooted_nj_hwcd + sum_constraint_hwcd,
ngt_label = paste0(ngt, " gene trees"),
ils_label = factor(
paste0(str_to_title(ils), " ILS"),
levels = c("Low ILS", "Med ILS", "High ILS", "Very High ILS")
),
m_label = paste0("m = ", m),
ils_m_label = paste0("m = ", m, " ", ils_label),
ntaxa_label = factor(
paste0(ntaxa, " taxa"),
levels = paste0(sort(unique(ntaxa)), " taxa")
),
error_diff = unrooted_hwcd - input_error,
min_greedy_error_diff = unrooted_min_greedy_hwcd - input_error,
scaled_hwcd = unrooted_hwcd / ntaxa,
scaled_input_error = input_error / ntaxa,
scaled_error_diff = scaled_hwcd - scaled_input_error,
min_greedy_approx_norm_hwcd = if_else(min_greedy_approx_norm_hwcd < unrooted_hwcd,
min_greedy_approx_norm_hwcd, unrooted_hwcd)
)
nrow(rt_df)
p2 <- rt_df %>%
filter(ntaxa == 30) %>%
filter(ncores %in% c(1, 2, 4)) %>%
mutate(
method = if_else(m == 10, "InPhyNet m=10", if_else(m == 20, "InPhyNet m=20", "SNaQ"))
) %>%
ggplot(aes(x = method, y = runtime, color = factor(ncores))) +
geom_boxplot() +
labs(x = "Method") +
scale_color_manual("CPU Cores", values = c('#1b9e77', '#d95f02', '#7570b3', "#e7298a")) +
labs(y = "Runtime (hours)") +
ggtitle("B")
p2
rt_df %>%
filter(ntaxa == 30) %>%
filter(ncores %in% c(1, 2, 4)) %>%
mutate(
method = if_else(m == 10, "InPhyNet m=10", if_else(m == 20, "InPhyNet m=20", "SNaQ"))
)$runtime
rt_df %>%
filter(ntaxa == 30) %>%
filter(ncores %in% c(1, 2, 4)) %>%
mutate(
method = if_else(m == 10, "InPhyNet m=10", if_else(m == 20, "InPhyNet m=20", "SNaQ"))
)$runtime_seconds
dddd <- rt_df %>%
filter(ntaxa == 30) %>%
filter(ncores %in% c(1, 2, 4)) %>%
mutate(
method = if_else(m == 10, "InPhyNet m=10", if_else(m == 20, "InPhyNet m=20", "SNaQ"))
)
dddd$runtime
filter(dddd, method == "InPhyNet m=10" & ncore == 1)
filter(dddd, method == "InPhyNet m=10" & ncores == 1)
median(filter(dddd, method == "InPhyNet m=10" & ncores == 1)$runtime)
median(filter(dddd, method == "InPhyNet m=20" & ncores == 1)$runtime)
median(filter(dddd, method == "SNaQ" & ncores == 1)$runtime)
